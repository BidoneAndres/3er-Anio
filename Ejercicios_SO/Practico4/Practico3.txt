/*1) Finalizar un programa utilizando un archivo externo
Escriba un programa que verifique periódicamente la
existencia de un archivo (nombre a elección)
Si descubre que existe entonces termina.*/
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdio.h>

int main ( int argc , char * argv[]){

       int fd=0;

       while(open("Finalizador.txt",O_RDONLY) < 0){
              sleep(1);
       }
       printf("El archivo a sido creado correctamente");
       close(fd);
       return 0;
}
/*
2) Finalizar un programa utilizando el contenido de un archivo externo
Similar al anterior, pero ahora queremos 'ver' que contiene el archivo.
Si contiene un valor '1' entonces prosigue
Si contiene el valor '0' termina*/


#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdlib.h>
#include <unistd.h>

#define LECTURA 10
int main ( int argc , char * argv[]){

       int fd=0;
       char buff[LECTURA] = {""};
       ssize_t leer;

       fd = open("Finalizador.txt", O_RDONLY);
       
        if(fd < 0){
            printf("No funciono");
            exit(1);
        }

       do{
              leer = read (fd,buff,LECTURA);

       }while(buff[0] != '0');


       printf("El archivo contiene 0");
       close(fd);
       return 0;
}
/*
3) Hacer que un proceso finalice a otro
Variante de los anteriores, pero esta vez tenemos dos procesos, A y B
A funciona como en 2
B espera un cierto tiempo y luego escribe el archivo esperado por A*/
#include <sys/types.h>
 #include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdio.h>


int main ( int argc , char * argv[]){

       int fd=0;

       printf("Buscando el archivo 'FinalizadorA.txt'");
       while( (fd=open("FinalizadorA.txt",O_RDONLY)) < 0){    
              sleep(1);
       }
       printf("El archivo a sido encontrado correctamente");
       close(fd);
       return 0;
}
FALTA HACER EL 4     